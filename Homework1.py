#!/usr/bin/env python
# coding: utf-8

# In[2]:


# быстрая сортировка Хоара

def hoar(a):
    if len(a) <= 1:
        return a
    b, s, d = [], [], []
    sup = a[0]
    for i in a:
        if i > sup:
            b.append(i)
        elif i == sup:
            s.append(i)
        elif i < sup:
            d.append(i)
    return hoar(b) + s + hoar(d)

a = [2,6,8,5,9,15,10,3]
print(hoar(a))


# In[1]:


# функция, динамически вычисляющая n-ое число Фибоначчи

def f(n):
    if n < 1:
        raise ValueError
    a = 0
    b = 1
    if n == 1:
        return a
    if n == 2:
        return b
    else:
        for i in range(n-2):
            a, b = b, a + b
        return b

print(f(100))


# In[1]:


# рекурсивная версия

def f(n):
    if n < 1:
        raise ValueError
    if n == 1:
        return 0
    if n == 2:
        return 1
    else:
        return f(n-1) + f(n-2)
    
print(f(10))


# ### Вопросы-Ответы:
# ### 1. git - нецентрализованная система контроля версий. githab - это сайт, который использует в своей основе git (есть и другие сайты, использующие git).
# ### 2. git используется в больших проектах, так как позволяет отследить все версии каждой части кода и вернуться к ним, что-то исправить и дополнить, а также можно одновременно работать нескольким людям, обмениваться кодами и совмещать их.
# ### 3. Ветки, репозитории, commit, push, pull, rebase, merge
# ### 4. Когда нужно отследить и исправить баг
# ### 5.Пусть мы работаем на ветке, отличной от главной. Теперь хотим закоммитить изменения с нее. Если мы делаем merge, то история из этой ветки скидывается на главную, а ветка, на которой мы работали, остается неизменной. Rebase перезаписывает целиком историю и все становится одним целым. Но при выполненнии rebase теряется контекст, доступный в коммите со слиянием, то есть не можем видеть, когда вышестоящие изменения были включены в функционал.
# ### 6. У централизованной СКВ есть главный сервер, через который можно получить доступ ко всем последующим репозиториям, в нецентрализованных такого сервера нет, все репозитории ведуться самостоятельно, с которыми можно работать локально, а потом все объеденить в один.
